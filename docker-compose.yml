services:
  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    env_file:
      - .env

  # redis:
  #   image: redis:7-alpine

  backend:
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - TIMEOUT="2000"
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    volumes:
      - ./backend/app:/app
      - app-shared-data:/tmp

  # celery:
  #   image: celery:latest
  #   depends_on:
  #     - db
  #     - redis
  #   env_file:
  #     - .env
  #   build:
  #     context: ./backend
  #     dockerfile: celery.dockerfile
  #     args:
  #       INSTALL_DEV: ${INSTALL_DEV-false}
  #   volumes:
  #     - app-shared-data:/tmp

  frontend:
    build:
      context: ./frontend
    env_file: .env
    volumes:
      - ./frontend:/app
    ports:
      - "8080:8080"
    depends_on:
      - backend

volumes:
  app-db-data:
  app-shared-data:
