name: build

on:
  push:
    branches:
      - "celery"

jobs:
  push_to_docker_hub:
    name: Push Image to Registry
    runs-on: ubuntu-latest
    steps:
      - name: copy the code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push backend Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: openpdfai/backend
          IMAGE_TAG: latest

        run: |
          docker build -f ./backend/backend.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push Queue Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: openpdfai/queue
          IMAGE_TAG: latest

        run: |
          docker build -f ./backend/batch.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy Terrafrom Rousourses
        env:
          # terraform
          TF_VAR_aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          TF_VAR_aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          TF_VAR_region: ${{secrets.AWS_REGION}}
          TF_VAR_tld_zone_id: ${{secrets.AWS_DNS_ZONE_ID}}
          TF_VAR_ecs_task_desired_count: ${{secrets.ECS_TASK_DESIRED_COUNT}}
          TF_VAR_service_name: ${{secrets.SERVICE_NAME}}

          # backend
          TF_VAR_ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          TF_VAR_PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          TF_VAR_SERVER_HOST: ${{ secrets.SERVER_HOST }}
          TF_VAR_DOMAIN: ${{ secrets.DOMAIN }}
          TF_VAR_BACKEND_CORS_ORIGINS: ${{ secrets.BACKEND_CORS_ORIGINS }}
          TF_VAR_FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}
          TF_VAR_FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
          TF_VAR_EMAILS_FROM_EMAIL: ${{ secrets.EMAILS_FROM_EMAIL }}
          TF_VAR_USERS_OPEN_REGISTRATION: ${{ secrets.USERS_OPEN_REGISTRATION }}
          TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}

          # postgres
          TF_VAR_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          TF_VAR_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          TF_VAR_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}

          # google
          TF_VAR_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

          # aws
          TF_VAR_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          TF_VAR_AWS_REGION: ${{ secrets.AWS_REGION }}

          # openai
          TF_VAR_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TF_VAR_OPENAI_ORGANIZATION: ${{ secrets.OPENAI_ORGANIZATION }}

          # qdrant
          TF_VAR_COLLECTION_NAME: ${{ secrets.COLLECTION_NAME }}
          TF_VAR_COLLECTION_SIZE: ${{ secrets.COLLECTION_SIZE }}
          TF_VAR_QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
          TF_VAR_QDRANT_HOST: ${{ secrets.QDRANT_HOST }}
          TF_VAR_QDRANT_PORT: ${{ secrets.QDRANT_PORT }}
          TF_VAR_QDRANT_URL: ${{ secrets.QDRANT_URL }}

          # smtp
          TF_VAR_MAILTRAP_API_KEY: ${{ secrets.MAILTRAP_API_KEY }}
          TF_VAR_SMTP_HOST: ${{ secrets.SMTP_HOST }}
          TF_VAR_SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          TF_VAR_SMTP_PORT: ${{ secrets.SMTP_PORT }}
          TF_VAR_SMTP_TLS: ${{ secrets.SMTP_TLS }}
          TF_VAR_SMTP_USER: ${{ secrets.SMTP_USER }}

          # stripe
          TF_VAR_STRIPE_ENDPOINT_SECRET: ${{ secrets.STRIPE_ENDPOINT_SECRET }}
          TF_VAR_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          TF_VAR_STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}

          # services secrets
          TF_VAR_CRON_JOB_SECRET_KEY: ${{ secrets.CRON_JOB_SECRET_KEY }}
          TF_VAR_DOCUMENT_PORECESSOR_SECRETE_KEY: ${{ secrets.DOCUMENT_PORECESSOR_SECRETE_KEY }}

        run: make deploy
